{"version":3,"sources":["component/Charts/StackedChart.js","container/decisionReq/DecisionReq.js","container/keySuccess/KeySuccess.js","component/ProgressTable/ProgressDataTable.js","container/listsOfNotes/Notes.js","container/Wireframe3.js","App.js","serviceWorker.js","index.js"],"names":["StackedChart","this","highChartsRender","Highcharts","chart","credits","enabled","title","text","align","type","renderTo","yAxis","style","fontWeight","fontSize","color","stackLabels","qTotals","defaultOptions","formatter","options","x","gridLineWidth","minorGridLineWidth","lineWidth","labels","xAxis","categories","y","plotLines","width","value","label","legend","layout","verticalAlign","tooltip","pointFormat","shared","plotOptions","column","stacking","dataLabels","series","name","data","props","classes","id","React","Component","DecisionReq","Fragment","className","KeySuccess","createData","prgectCode","prgectName","clientowner","clientName","netRev","PerTGT","rows","DataTable","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","Grid","container","item","xs","Notes","Wireframe3","Container","sm","Box","cornerRadius","marginInPercent","arcPadding","hideText","colors","RevenueSalesData","ProgressDataTable","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a2a3c20.chunk.js","sourcesContent":["\r\nimport React, { Fragment } from 'react'\r\nimport Highcharts from 'highcharts';\r\n\r\n\r\nclass StackedChart extends React.Component {\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.highChartsRender()\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n\r\n\r\n    highChartsRender() {\r\n\r\n        Highcharts.chart({\r\n            credits: { enabled: false },\r\n\r\n            title: {\r\n                text: \"\",\r\n                align: 'left'\r\n            },\r\n            \r\n            chart: {\r\n                type: 'column',\r\n                renderTo: 'container'\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: \"Â£'000s\",                    \r\n                    style:{\r\n                        fontWeight:\"bold\",\r\n                        fontSize:\"15px\",\r\n                        color: \"#333333\"   \r\n                    }                                 \r\n                },\r\n                stackLabels: {\r\n                    qTotals: ['____','____','____','____','____', '____', '____', '____', '____', '____'],\r\n                    enabled: true,\r\n                    style: {\r\n                        fontWeight:\"bold\",\r\n                        color: ( // theme\r\n                            Highcharts.defaultOptions.title.style && Highcharts.defaultOptions.title.style.color\r\n                        ) || '#333333'\r\n                    },\r\n                    formatter: function() {            \r\n                        return this.options.qTotals[this.x];\r\n                    }\r\n                },      \r\n                gridLineWidth: 0,          \r\n                minorGridLineWidth: 0,\r\n                lineWidth: 1,\r\n                labels: {\r\n                    formatter: function () {\r\n                        return '';\r\n                    },\r\n                    style: {\r\n                        color: '#4572A7'\r\n                    }\r\n                },\r\n                \r\n            },\r\n\r\n            xAxis: {\r\n                categories: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],               \r\n                title:{\r\n                    text:\"Client\",\r\n                    align: \"left\",\r\n                    style:{                        \r\n                        fontSize: \"13px\",\r\n                        fontWeight:\"bold\",\r\n                        color: \"#333333\"\r\n                    },\r\n                    y:-20\r\n                },\r\n                gridLineWidth: 1,\r\n               \r\n                plotLines: [{\r\n                    color: '#FF0000',\r\n                    width: 0,\r\n                    value:0,\r\n                    label:{\r\n                        text: \"% of co revenue\" ,\r\n                        style:{\r\n                            fontSize:\"12px\"\r\n                        }                       \r\n                    },\r\n                },\r\n                {\r\n                    color: '#FF0000',\r\n                    width: 0,\r\n                    value: 1,\r\n                    label:{\r\n                        text: \"%\" ,\r\n                        style:{\r\n                            fontSize:\"12px\"\r\n                        }                       \r\n                    },\r\n                },\r\n                {\r\n                    color: '#FF0000',\r\n                    width: 0,\r\n                    value: 2,\r\n                    label:{\r\n                        text: \"%\" ,\r\n                        style:{\r\n                            fontSize:\"12px\"\r\n                        }                       \r\n                    },\r\n                },\r\n                {\r\n                    color: '#FF0000',\r\n                    width: 0,\r\n                    value: 3,\r\n                    label:{\r\n                        text: \"%\" ,\r\n                        style:{\r\n                            fontSize:\"12px\"\r\n                        }                       \r\n                    },\r\n                },\r\n                {\r\n                    color: '#FF0000',\r\n                    width: 0,\r\n                    value: 4,\r\n                    label:{\r\n                        text: \"%\" ,\r\n                        style:{\r\n                            fontSize:\"12px\"\r\n                        }                       \r\n                    },\r\n                },\r\n                {\r\n                    color: '#FF0000',\r\n                    width: 0,\r\n                    value: 5,\r\n                    label:{\r\n                        text: \"%\" ,\r\n                        style:{\r\n                            fontSize:\"12px\"\r\n                        }                       \r\n                    },\r\n                },\r\n                {\r\n                    color: '#FF0000',\r\n                    width: 0,\r\n                    value: 6,\r\n                    label:{\r\n                        text: \"%\" ,\r\n                        style:{\r\n                            fontSize:\"12px\"\r\n                        }                       \r\n                    },\r\n                },\r\n                {\r\n                    color: '#FF0000',\r\n                    width: 0,\r\n                    value: 7,\r\n                    label:{\r\n                        text: \"%\" ,\r\n                        style:{\r\n                            fontSize:\"12px\"\r\n                        }                       \r\n                    },\r\n                },\r\n                {\r\n                    color: '#FF0000',\r\n                    width: 0,\r\n                    value: 8,\r\n                    label:{\r\n                        text: \"%\" ,\r\n                        style:{\r\n                            fontSize:\"12px\"\r\n                        }                       \r\n                    },\r\n                },{\r\n                    color: '#FF0000',\r\n                    width: 0,\r\n                    value: 9,\r\n                    label:{\r\n                        text: \"%\" ,\r\n                        style:{\r\n                            fontSize:\"12px\"\r\n                        }                       \r\n                    },\r\n                }\r\n            ]\r\n\r\n            },\r\n            legend: {\r\n                layout: 'vertical',\r\n                align: 'right',\r\n                verticalAlign: 'middle'\r\n            },\r\n            tooltip: {\r\n                pointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',\r\n                shared: false\r\n            },\r\n            plotOptions: {\r\n                column: {\r\n                    stacking: 'normal',\r\n                    dataLabels: {\r\n                        enabled: false\r\n                    }                    \r\n                }\r\n            },\r\n            series: [{\r\n                name: 'PIPELINE',\r\n                color: \"#c564c5\",\r\n                data: [2, 1, 3, 2, 4, 1, 3, 1, 3, 4]\r\n            }, {\r\n                name: 'SOW',\r\n                color: \"#f7b949\",\r\n                data: [2, 2, 1, 3, 3, 2, 4, 1, 2, 2]\r\n            },{\r\n                name: 'YTD REV',\r\n                color: \"#64a86b\",\r\n                data: [2, 2, 1, 1, 3, 2, 2, 2, 2,3]\r\n            },\r\n            {\r\n                name: 'TGT',\r\n                color: \"#000000\",\r\n                data: [0, 0, 0, 0, 0, 0, 0, 0, 0,0]\r\n            }\r\n        ]\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes\r\n        } = this.props;\r\n        return (\r\n            <Fragment>\r\n                {<div id={\"container\"}>\r\n                </div>}\r\n            </Fragment>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default StackedChart;","import React from 'react'\r\nimport './decisionReq.css'\r\n\r\n\r\n\r\nfunction DecisionReq(){\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"deci-req-field\">\r\n                <h2>Decisions Requested From Board</h2>\r\n                <ul>\r\n                    <li> Decision </li>\r\n                    <li> Decision </li>\r\n                    <li> Decision </li>\r\n                </ul>\r\n            </div>        \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DecisionReq","import React from 'react'\r\nimport './keySuccess.css'\r\n\r\n\r\nfunction KeySuccess(){\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"key-success-field\">\r\n                <h3>Key Successes </h3>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default KeySuccess","import React from 'react'\r\nimport {TableContainer,TableHead, TableRow, Table, TableBody, TableCell, Grid  } from '@material-ui/core'\r\nimport '../common.css'\r\n\r\n  \r\n  \r\nfunction createData(prgectCode, prgectName, clientowner, clientName, netRev, PerTGT) {\r\n    return {prgectCode, prgectName, clientowner, clientName, netRev, PerTGT};\r\n  }\r\n  \r\n  const rows = [\r\n    createData(1001, \"Project1\"),\r\n    createData(1002, \"Project2\"),\r\n    createData(1003, \"Project3\"),\r\n    createData(1004, \"Project4\"),\r\n    createData(1005, \"Project5\"),\r\n    createData(1006, \"Project6\"),\r\n    createData(1007, \"Project7\"),\r\n    createData(1007, \"Project8\")\r\n  ];\r\nclass DataTable extends React.Component{\r\n    \r\n   render(){\r\n    return(\r\n        <React.Fragment>              \r\n          <TableContainer>          \r\n          <h2>Top 10 Projects</h2>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Project Code </TableCell>\r\n                <TableCell align=\"center\">Project Name</TableCell>\r\n                <TableCell align=\"center\">Client Owner</TableCell>\r\n                <TableCell align=\"center\">Client Name</TableCell>\r\n                <TableCell align=\"center\">Net Rev YTD</TableCell>\r\n                <TableCell align=\"center\">% TGT</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map(row => (\r\n                <TableRow>\r\n                  <TableCell align=\"center\">{row.prgectCode}</TableCell>\r\n                  <TableCell align=\"center\">{row.prgectName}</TableCell>\r\n                  <TableCell align=\"center\">{row.clientowner}</TableCell>\r\n                  <TableCell align=\"center\">{row.clientName}</TableCell>\r\n                  <TableCell align=\"center\">{row.netRev}</TableCell>\r\n                  <TableCell align=\"center\">{row.PerTGT}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n                <div className=\"sub-total-data\">\r\n                  <strong>Top Ten Subtotal = </strong><span>______________________</span>\r\n                </div>\r\n                <div className=\"sub-total-data\">\r\n                  <strong>All Clients Total = </strong><span>_______________________</span>\r\n                </div>\r\n          </Grid>\r\n        </Grid>\r\n        </React.Fragment>\r\n    )\r\n\r\n   }   \r\n}\r\nexport default DataTable","import React, {Component} from 'react'\r\n\r\n\r\n\r\nclass Notes extends Component{   \r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"notes-container\">\r\n                    <h3>{this.props.title}</h3>\r\n                    <ul>\r\n                        <li> </li>\r\n                        <li> </li>\r\n                        <li> </li>\r\n                        <li> </li>\r\n                        <li> </li>\r\n                    </ul>\r\n                </div>\r\n            </React.Fragment>\r\n        \r\n        )\r\n    }\r\n  \r\n}\r\nexport default Notes\r\n","import React from 'react'\r\nimport {Container, Grid, Box} from '@material-ui/core'\r\nimport RevenueSalesData from '../data/revenue_sales.json'\r\nimport StackedChart from '../component/Charts/StackedChart'\r\nimport './common.css'\r\nimport DecisionReq from './decisionReq/DecisionReq'\r\nimport KeySuccess from './keySuccess/KeySuccess'\r\nimport GaugeChart from 'react-gauge-chart'\r\nimport ProgressDataTable from '../component/ProgressTable/ProgressDataTable'\r\nimport Notes from './listsOfNotes/Notes'\r\n\r\n\r\nfunction  Wireframe3(){  \r\n    return(\r\n        <React.Fragment>\r\n          <header className=\"header-style\">  \r\n            <Container>            \r\n              <Grid container>\r\n                <Grid item xs={12}>              \r\n                  <h2>Overview</h2> \r\n                </Grid>\r\n              </Grid> \r\n            </Container>      \r\n          </header>\r\n          <Container>\r\n          <Grid container> \r\n            <Grid item sm={12} className=\"grid-section\">           \r\n              <Grid item xs={12} className=\"key-accounts padding-ad-10\">\r\n                  <h2>Key Accounts</h2>\r\n                </Grid>\r\n            </Grid>\r\n          <Grid item sm={12} className=\"\">\r\n            <Grid container>             \r\n            <Grid item xs={2} className=\"padding-ad-10\">                \r\n                             \r\n              </Grid> \r\n              <Grid item xs={6} className=\"padding-ad-10\">                \r\n                  <DecisionReq></DecisionReq>              \r\n              </Grid> \r\n              <Grid item xs={4} className=\"padding-ad-10\">     \r\n                  <Box className=\"box-style\">\r\n                    <GaugeChart id=\"gauge-chart\" cornerRadius={0} marginInPercent={0.05} arcPadding={0} hideText={true} colors={[\"#ff4800\", \"#FFA500\", \"#008000\"]}/>\r\n                  </Box>   \r\n              </Grid>                       \r\n            </Grid>          \r\n          </Grid>             \r\n          <Grid item sm={12} className=\"stackedChart\"> \r\n            <Grid container>          \r\n              <Grid item xs={6} className=\"padding-ad-10\">\r\n                <Box className=\"box-style\">\r\n                  <h2>Top 10 Clients</h2>                \r\n                  <StackedChart id={2} data={RevenueSalesData}></StackedChart>                   \r\n                <KeySuccess></KeySuccess>\r\n                </Box>\r\n                  \r\n              </Grid> \r\n              <Grid item sm={6} className=\"padding-ad-10\">\r\n                <Box className=\"box-style progressTable\">    \r\n                  <ProgressDataTable></ProgressDataTable>\r\n                </Box>\r\n              </Grid>          \r\n            </Grid>           \r\n          </Grid>            \r\n          <Grid item xs={12} className=\"pipeline-chart\"> \r\n            <Grid container>     \r\n              <Grid item xs={4} className=\"padding-ad-10\">\r\n                <Box className=\"box-style b-num\"> \r\n                  <Notes title=\"Issues To Be Addressed\"></Notes>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={3} className=\"padding-ad-10\"> \r\n                <Box className=\"box-style b-alpha\"> \r\n                  <Notes title=\"Finances\"></Notes>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={5} className=\"padding-ad-10\">\r\n                <Box className=\"box-style b-num\"> \r\n                  <Notes title=\"New Target Clients + Action To Pursue\"></Notes>\r\n                </Box> \r\n              </Grid>\r\n            </Grid>   \r\n            </Grid> \r\n          </Grid>\r\n          </Container>\r\n        </React.Fragment>\r\n    ) \r\n}\r\nexport default Wireframe3\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Wireframe3 from './container/Wireframe3'\n\n\n\nfunction App() {\n  \n  return (\n    <React.Fragment>       \n      <Wireframe3></Wireframe3>      \n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}